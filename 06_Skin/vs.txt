#version 400
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
layout (std140, binding = 0) uniform t_data {
	mat4 w;
	mat4 v;
	mat4 p;
	mat4 wvp;
} data;
layout (std140, binding = 1) uniform t_skin {
	mat4 b[2];
} skin;
layout (location = 0) in vec3 in_pos;
layout (location = 1) in vec3 in_normal;
layout (location = 2) in vec4 in_color;
layout (location = 3) in vec2 in_tc0;
layout (location = 4) in uvec2 in_bi;
layout (location = 5) in vec2 in_bw;
layout (location = 0) out vec3 out_normal;
layout (location = 1) out vec4 out_color;
layout (location = 2) out vec2 out_tc0;
out gl_PerVertex {
	vec4 gl_Position;
};
void main() {
	out_color = in_color;
	out_tc0 = in_tc0;
	mat4 b0 = skin.b[in_bi[0]] * in_bw[0];
	mat4 b1 = skin.b[in_bi[1]] * in_bw[1];
	mat4 b = b0 + b1;
	out_normal = mat3(data.w) * (mat3(b) * in_normal);
	gl_Position = data.wvp * vec4((b * vec4(in_pos, 1)).xyz, 1);
}