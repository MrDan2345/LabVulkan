#version 400
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
layout (binding = 1) uniform sampler2D tex_color;
layout (binding = 2) uniform sampler2D tex_normal;
layout (location = 0) in vec4 in_pos;
layout (location = 1) in vec3 in_normal;
layout (location = 2) in vec3 in_tangent;
layout (location = 3) in vec3 in_binormal;
layout (location = 4) in vec4 in_color;
layout (location = 5) in vec2 in_tc0;
layout (location = 6) in vec4 in_pos_w;
layout (location = 0) out vec4 out_color;
layout (location = 1) out vec4 out_normal;
void main() {
  mat3 tbn = mat3(normalize(in_tangent), normalize(in_binormal), normalize(in_normal));
  vec3 normal = normalize(tbn * (texture(tex_normal, in_tc0).xyz * 2 - 1));
  out_color = texture(tex_color, in_tc0);
  out_normal = vec4(normal, 1);
}